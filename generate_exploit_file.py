#!/bin/python

import os
import re
import fnmatch

def to_c_name(exploit):
	return exploit.replace("-","_")

def versions(versions):
	ret = ""
	if re.match(r"^[^a-zA-Z\-]*\Z",versions) != None:
		versions = [x.lstrip(",\n ").rstrip(",\n ") for x  in versions.split(",")]
		for i in versions:
			ret += "||("
			ret += "kern_version=="+str(i.split(".")[0])
			if len(i.split(".")) > 1:
				ret += "&&kern_major=="+str(i.split(".")[1])
			if len(i.split(".")) > 2:
				ret += "&&kern_minor=="+str(i.split(".")[2])
			ret += ")"
	else:
		print(versions)
		#In other cases the versions might be written by hand, there is not much that can be done automatically here
	return ret



if not os.path.exists("./linux-kernel-exploits"):
  os.system("git clone https://github.com/SecWiki/linux-kernel-exploits")

exploits_test_part = ""
exploits_info_part = ""

main_part = "void generated_exploits(){"

for root,dir,files in os.walk("linux-kernel-exploits"):
	if root != "linux-kernel-exploits" and "README.md" in files:
		with open(root+"/README.md") as readme:
			content = readme.read()
			r1 = re.findall(r"Kernels[^`]*```([^`]*)```", content)
			if len(r1)==1:
				exploit_name = "generated_"+to_c_name(os.path.basename(root))
				
				exploits_info_part += "void exploit_"+exploit_name+"_info(){\n"
				exploits_info_part += "printf(\"System might be vulnerable to "+exploit_name+"\\nThis is autogenerated and might be false positive, as it checks only version numbers.\");\n"
				exploits_info_part += "}\n"

				exploits_test_part += "int exploit_"+exploit_name+"_test(){\nif(0"+versions(r1[0])+")return 1;return 0;}\n"
				main_part += "REGISTER_EXPLOIT("+exploit_name+");\n"
				

main_part += "}"


with open("generated_exploits.c","w")  as generated:
	generated.write(exploits_test_part)
	generated.write(exploits_info_part)
	generated.write(main_part)
